# We need branch protection rule for all below to have purpose

env:
  second_msg: ${{ false }}
  github_base_url: "https://github.com"
  github_api_url: "https://api.github.com/repos/gdcorp-engineering/migration-tech-framework"
  slack_channel: "borg_github_internal"
  slack_token_id: "slack_borg_github_internal"
  SEARCH_PATTERN: "[_AUTO_] - pull-request"
  MASTER_BRANCH_NAME: "main"
  STAGING_BRANCH_NAME: "staging"

permissions:
  pull-requests: write

name: "Ansible Lint"
on:
  pull_request_target:
    branches:
      - staging
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.workflow }}

jobs:
  run_ansible_lint:
    name: "Run ansible-lint"
    runs-on: ubuntu-latest

    steps:
      - name: "Get list of changed files"
        id: get-changed-files
        uses: actions/github-script@v6
        with:
          script: |
            const filesFullList = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ github.event.number }}
            });
            const filesNames = filesFullList.data.map(file => file.filename).join(' ');
            require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `filesNames=${JSON.stringify(filesNames)}\n`);
            console.log(filesNames)

      - name: "Checkout source branch"
        id: checkout-scm
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      # Otherwise linter accept list of files as a single string filename
      - name: "Remove trailing and leading quotes"
        id: format-filenames
        run: |
          FILENAMES=${{ steps.get-changed-files.outputs.filesNames }}
          FILENAMES="${FILENAMES%\"}"
          FILENAMES="${FILENAMES#\"}"
          echo "FILENAMES=$FILENAMES" >> $GITHUB_ENV

      - name: "Run ansible-lint"
        id: run-lint
        uses: ansible/ansible-lint@main
        with:
          args: ${{ env.FILENAMES }}

      - name: "Close pull request if tests failed"
        id: close-failed-pr
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.number }},
              body: "Pull Request has been closed because it didn't pass tests"
            });

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.number }}
            });
